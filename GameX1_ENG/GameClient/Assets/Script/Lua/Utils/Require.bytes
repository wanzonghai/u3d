require 'XLua/xlua/util'
require "Utils/Class"
require "Utils/L"
local Time = CS.UnityEngine.Time
Require = {}
local yield_return =(require 'Utils/cs_coroutine').yield_return
--local ABDownLoader = CS.ABDownLoader
local ResPercent = 0

local ScriptPath = 
{
	--#Utils
	"World/Component/EnumGather",
	"Utils/L",
	"Utils/ABDLUtils",
	"Utils/cs_coroutine",
	"Utils/Delegate",
	"Utils/GameUtils",
	"Utils/ProtoUtils",
	"Utils/PlayerPrefsUtils",
	"Utils/TimeUtils",
	"Utils/PlayerPrefsUtils",
	"Utils/StringUtils",
	"Utils/TableUtils",
	"Utils/Utils",
	"Utils/QualityUtils",

	"World/Component/Animations",
	"World/Component/Attribute",
	"World/Component/Attributes",
	"World/Component/NavMeshAgents",
	"World/Component/NavMeshRaycast",
	"World/Component/NormVO",
	"World/Component/SceneCode",
	"World/Component/WorldTrigger",
	"World/Component/SceneTrigger",

	"Camera/Major/MajorCameraBase",
	"Camera/Major/SkillMajorCamera",
	"Camera/NormCamera",
	"Camera/CameraManager",

	"World/Clothes/BodyClothes",
	"World/Clothes/WeaponClothes",
	"World/Clothes/BoneClothes",

	"World/Effect/EffectBase",
	"World/Effect/FixedEffect",
	"World/Effect/LineEffect",
	"World/Effect/MoveEffect",
	"World/Effect/ProgressEffect",
	"World/Effect/RadiusEffect",
	"World/Effect/RoleEffect",
	"World/Effect/UIEffect",
	"World/Effect/EffectManager",


	"World/Skill/Action/SkillAcitonBase",
	"World/Skill/Action/AnimSkill",
	"World/Skill/Action/DamageSkill",
	"World/Skill/Action/CameraSkill",
	"World/Skill/Action/ChargeClientSkill",
	"World/Skill/Action/ChargeSkill",
	"World/Skill/Action/DelaySkill",
	"World/Skill/Action/EffectMoveRoleSkill",
	"World/Skill/Action/EffectMoveSkill",
	"World/Skill/Action/EffectPointSkill",
	"World/Skill/Action/EffectRoleSkill",
	"World/Skill/Action/HideSkill",
	"World/Skill/Action/LineEffectSkill",
	"World/Skill/Action/MoveToSkill",
	"World/Skill/Action/PositionSkill",
	"World/Skill/Action/RotationSkill",
	"World/Skill/Action/ShakeSkill",
	"World/Skill/Action/SoundSkill",
	"World/Skill/Action/TimeScaleSkill",
	"World/Skill/Action/WeaponPositionSkill",
	"World/Skill/SkillUtils",
	"World/Skill/SkillUnit",
	"World/Skill/Skills",
	
	"World/Controller/Handles/HandleBase",
	"World/Controller/Handles/AnimHandle",
	"World/Controller/Handles/DeadHandle",
	"World/Controller/Handles/FrozenHandle",
	"World/Controller/Handles/HitHandle",
	"World/Controller/Handles/IdleHandle",
	"World/Controller/Handles/RunHandle",
	"World/Controller/Handles/SkillHandle",
	"World/Controller/Handles/StunHandle",

	"World/Controller/NormController",
	"World/Controller/PlayerController",
	"World/Controller/MyPlayerController",
	"World/Controller/MonsterController",
	"World/Controller/NPCController",
	

	--World
	"World/Scene/Grid/GridModel",
	"World/Scene/Grid/GridUnit",
	"World/Scene/Grid/GridManager",
	"World/Scene/SceneBase",
	"World/Scene/NormScene",
	"World/Scene/WorldScene",
	"World/Scene/LaunchScene",
	"World/Scene/MainScene",
	"World/SceneManager",

	"World/Pool/Pool/PoolAnimationClip",
	"World/Pool/Pool/PoolAudioClip",
	"World/Pool/Pool/PoolImage",
	"World/Pool/Pool/PoolTransform",
	"World/Pool/TransPool/TransPool",
	"World/Pool/TransPool/EffectPool",
	"World/Pool/TransPool/RolePool",
	"World/Pool/PoolUnit",
	"World/Pool/PoolManager",

	"World/Object/ObjectBase",
	"World/Object/NormObject",
	"World/Object/WorldObject",
	"World/Object/PlayerObject",
	"World/Object/MonsterObject",
	"World/Object/MyPlayerObject",
	"World/Object/NPCObject",
	"World/Object/NPCObject",

	--Manager
	"Manager/EventDispatcher",
	"Manager/SoundManager",
	"Manager/TimerManager",

	--Windows
	"Windows/Utils/NGUITools",
	"Windows/Utils/NumberUnit",
	"Windows/Utils/PoolComponent",
	"Windows/Utils/ScrollRectItem",
	"Windows/Utils/ScrollRectView",

	"Windows/Manager/ViewData",
	"Windows/Manager/Windows",
	"Windows/Manager/WindowManager",

	--Mono
	"Windows/Mono/Base/WindowBase",
	"Windows/Mono/Loading/LoadingView",
	"Windows/Mono/Joystick/JoystickView",
	"Windows/Mono/Main/MainView",
	"Windows/Mono/Game/GameView",
	"Windows/Mono/Account/AccountView",
	"Windows/Mono/Setting/SettingView",

	--Server
	"Windows/Server/Base/WindowServerBase",
	"Windows/Server/Loading/LoadingServer",
	"Windows/Server/Joystick/JoystickServer",
	"Windows/Server/Main/MainServer",
	"Windows/Server/Game/GameServer",
	"Windows/Server/Account/AccountServer",
	"Windows/Server/Setting/SettingServer",
}

local loadCoroutine = false
if loadCoroutine then
	local co = coroutine.create(function()
		local i = 0
		local SumCount = #ScriptPath
		local tStart = Time.realtimeSinceStartup
		while i < #ScriptPath do
			i = i + 1
			require (ScriptPath[i])
			ResPercent = (i / SumCount) * 0.9
			local tNow = Time.realtimeSinceStartup
			if tNow-tStart>0.05 then
				yield_return(CS.UnityEngine.WaitForEndOfFrame())
				Require.ShowProgress(ResPercent)
				tStart=tNow
			end
		end
		yield_return(CS.UnityEngine.WaitForEndOfFrame())
		
		--CameraManager:GetInstance()
		--SocketManager:GetInstance()
		--WindowManager:GetInstance()
		--DataManager:GetInstance()
		
		yield_return(CS.UnityEngine.WaitForEndOfFrame())
		--local assetPath = ABDLUtils.GetLoginDependencies()
		--local downLoader = ABDownLoader(assetPath,ABDLUtils.Window)
		--downLoader:Load(function() Require.LoadResComplete() end, function(progress) Require.OnLoadLastProgress(progress) end)
		
	end) 
	coroutine.resume(co)
else
	for i = 1,#ScriptPath do
		require (ScriptPath[i])
	end
	L.Log("Require Finish")
end

Require.LoadResComplete = function()
	--CS.HotFixWindow.OnCompleteLoading()
	--CS.TotalManager:GetInstance():OnLuaInitialization()
	ResPercent = 1
end

Require.OnLoadLastProgress = function(progress)
	local percent = ResPercent + progress * 0.1
	--Require.ShowProgress(percent)
end

Require.ShowProgress = function(percent)
	--CS.HotFixWindow.OnResLoading(percent,L.Language(13828))
end